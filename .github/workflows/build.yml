name: App Release

on:
  push:
    branches:
      - main
jobs:
  linux-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Rust
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Windows Target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Install Windows Linker
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build for Linux
        run: cargo build --release --target=x86_64-unknown-linux-gnu
        id: linux

      - name: Archive Linux Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ipo-linux
          path: target/x86_64-unknown-linux-gnu/release/ipo

      - name: Build for Windows
        run: cargo build --release --target=x86_64-pc-windows-gnu
        id: windows

      - name: Archive Windows Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ipo-windows
          path: target/x86_64-pc-windows-gnu/release/ipo.exe

      - name: Upload Linux Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-gnu/release/ipo
          asset_name: ipo-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-gnu/release/ipo.exe
          asset_name: ipo-windows.exe
          asset_content_type: application/octet-stream

  macos:
    runs-on: macos-latest

    steps:
      - name: Set up Rust
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build for macOS
        run: cargo build --release
        id: macos

      - name: Archive macOS Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ipo-macos
          path: target/release/ipo

      - name: Upload macOS Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-apple-darwin/release/ipo
          asset_name: ipo-macos
          asset_content_type: application/octet-stream

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [macos, linux-windows]
    steps:
      - name: Get Version from Cargo.toml
        id: get_version
        run: echo "::set-output name=version::$(cat Cargo.toml | jq -r '.package.version')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Release of ipo
          draft: false
          prerelease: false
