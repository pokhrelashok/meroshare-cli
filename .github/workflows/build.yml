name: Upload Artifacts

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: |
            Release of ipo
          draft: false
          prerelease: false
          
  linux-windows:
    runs-on: ubuntu-latest
    needs: ["release"]
    steps:
      - name: Set up Rust
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Windows Target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Install Windows Linker
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build for Linux
        run: cargo build --release --target=x86_64-unknown-linux-gnu
        id: linux

      - name: Archive Linux Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ipo-linux
          path: target/x86_64-unknown-linux-gnu/release/ipo

      - name: Build for Windows
        run: cargo build --release --target=x86_64-pc-windows-gnu
        id: windows

      - name: Archive Windows Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ipo-windows
          path: target/x86_64-pc-windows-gnu/release/ipo.exe

      - name: Upload Linux Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-gnu/release/ipo
          asset_name: ipo-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-gnu/release/ipo.exe
          asset_name: ipo-windows.exe
          asset_content_type: application/octet-stream
